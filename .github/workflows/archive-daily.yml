name: archive-daily

on:
  schedule:
    - cron: "8 0 * * *"
  workflow_dispatch: {}

permissions:
  contents: write
  actions: read

concurrency:
  group: archive-daily
  cancel-in-progress: false

jobs:
  archive:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - id: when
        shell: bash
        run: |
          if date -u -d yesterday +%F >/dev/null 2>&1; then
            echo "date=$(date -u -d yesterday +%F)" >> "$GITHUB_OUTPUT"
          else
            echo "date=$(date -u -v-1d +%F)" >> "$GITHUB_OUTPUT"
          fi

      - name: Download latest warehouse artifact
        id: dlwh
        uses: dawidd6/action-download-artifact@v3
        with:
          workflow: update-warehouse.yml
          workflow_conclusion: success
          branch: main
          path: artifacts
          if_no_artifact_found: warn

      - id: find
        shell: bash
        run: |
          set -euo pipefail
          D="${{ steps.when.outputs.date }}"
          mkdir -p out
          FOUND=""
          if [ -d artifacts ]; then
            FOUND=$(find artifacts -type f -path "*/data/warehouse/daily/${D}.jsonl" -print -quit || true)
          fi
          if [ -n "$FOUND" ]; then
            cp -v "$FOUND" "out/news_${D}.jsonl"
            echo "from=warehouse" >> "$GITHUB_OUTPUT"
            echo "path=out/news_${D}.jsonl" >> "$GITHUB_OUTPUT"
          fi

      - name: Download latest live artifact (fallback)
        if: ${{ steps.find.outputs.from != 'warehouse' }}
        uses: dawidd6/action-download-artifact@v3
        with:
          workflow: collect_continuous.yml
          workflow_conclusion: success
          branch: main
          path: live_art
          if_no_artifact_found: warn

      - name: Build daily from live (fallback)
        if: ${{ steps.find.outputs.from != 'warehouse' }}
        shell: bash
        env:
          D: ${{ steps.when.outputs.date }}
        run: |
          set -euo pipefail
          mkdir -p out
          python - << 'PY'
          import os, glob, sys
          D = os.environ["D"]
          out = f"out/news_{D}.jsonl"
          cnt = 0
          with open(out, "w", encoding="utf-8") as w:
            for p in sorted(glob.glob("live_art/**/*.jsonl", recursive=True)):
              with open(p, "r", encoding="utf-8") as r:
                for line in r:
                  if line.strip():
                    w.write(line)
                    cnt += 1
          print("written", cnt, "lines")
          PY

      - id: verify
        shell: bash
        run: |
          set -euo pipefail
          D="${{ steps.when.outputs.date }}"
          test -s "out/news_${D}.jsonl"

      - name: Gzip
        shell: bash
        run: |
          D="${{ steps.when.outputs.date }}"
          gzip -9 -f "out/news_${D}.jsonl"
          ls -lh out

      - name: Release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: snap-${{ steps.when.outputs.date }}
          name: snap-${{ steps.when.outputs.date }}
          body: Daily snapshot (UTC) for ${{ steps.when.outputs.date }}.
          files: |
            out/news_${{ steps.when.outputs.date }}.jsonl.gz
          draft: false
          prerelease: false
          make_latest: false
          fail_on_unmatched_files: true
          append_body: false
          generate_release_notes: false
          allowUpdates: true
