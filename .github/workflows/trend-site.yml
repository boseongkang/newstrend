name: trend-site
on:
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - uses: dawidd6/action-download-artifact@v3
        with:
          workflow: update-warehouse.yml
          workflow_conclusion: success
          name: warehouse
          search_artifacts: true
          path: artifacts
          if_no_artifact_found: error

      - name: Restore warehouse
        shell: bash
        run: |
          set -euo pipefail
          ls -lahR artifacts || true
          mkdir -p data/warehouse/daily
          if ls artifacts/*.zip >/dev/null 2>&1; then
            mkdir -p artifacts/unpacked
            unzip -q artifacts/*.zip -d artifacts/unpacked
          fi
          for base in artifacts artifacts/unpacked; do
            if [ -d "$base/daily" ]; then rsync -a "$base/daily/" data/warehouse/daily/; fi
            if [ -d "$base/warehouse/daily" ]; then rsync -a "$base/warehouse/daily/" data/warehouse/daily/; fi
            if [ -d "$base/data/warehouse/daily" ]; then rsync -a "$base/data/warehouse/daily/" data/warehouse/daily/; fi
            [ -f "$base/master.jsonl" ] && cp -f "$base/master.jsonl" data/warehouse/master.jsonl || true
            [ -f "$base/warehouse/master.jsonl" ] && cp -f "$base/warehouse/master.jsonl" data/warehouse/master.jsonl || true
            [ -f "$base/data/warehouse/master.jsonl" ] && cp -f "$base/data/warehouse/master.jsonl" data/warehouse/master.jsonl || true
          done
          test -d data/warehouse/daily
          test "$(find data/warehouse/daily -type f -name '*.jsonl' | wc -l | tr -d ' ')" != "0"

      - name: Aggregate
        run: |
          python scripts/aggregate_from_warehouse.py \
            --warehouse data/warehouse/daily \
            --out run \
            --last-days 30 \
            --min-len 4 \
            --extra-stop config/extra_noise.txt

      - name: Build static site
        run: |
          python scripts/build_static_ui.py --run run --out site
          touch site/.nojekyll
          ls -lahR site || true

      - uses: actions/upload-pages-artifact@v3
        with:
          path: site

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/deploy-pages@v4
