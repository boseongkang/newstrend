name: trend-site

on:
  workflow_dispatch:
    inputs:
      lookback_days:
        description: "How many recent days to include"
        required: false
        default: "30"

permissions:
  contents: read
  actions: read
  pages: write
  id-token: write

concurrency:
  group: trend-site
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }

      - uses: actions/setup-python@v5
        with: { python-version: "3.12" }

      - name: Install
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          pip install -e .

      - name: Download latest warehouse
        id: wh
        uses: dawidd6/action-download-artifact@v3
        with:
          repo: ${{ github.repository }}
          workflow: update-warehouse.yml
          workflow_conclusion: success
          branch: main
          name: warehouse
          search_artifacts: true
          if_no_artifact_found: error
          path: warehouse_artifacts

      - name: Restore warehouse
        run: |
          set -euo pipefail
          mkdir -p data/warehouse data/metrics
          rsync -av warehouse_artifacts/ ./ || true
          rsync -av warehouse_artifacts/data/ ./ || true
          test -f data/warehouse/master.jsonl

      - name: Resolve START/END from daily jsonl
        id: rng
        shell: bash
        env:
          LOOKBACK: ${{ inputs.lookback_days }}
        run: |
          python - <<'PY' > /tmp/range.txt
          import glob, os, datetime as dt
          fs = sorted(glob.glob("data/warehouse/daily/*.jsonl"))
          n  = int(os.environ.get("LOOKBACK","30"))
          if fs:
              end = os.path.basename(fs[-1])[:-6]
              start = os.path.basename(fs[-min(n,len(fs))])[:-6]
          else:
              end = start = ""
          print(start); print(end)
          PY
          START=$(sed -n '1p' /tmp/range.txt)
          END=$(sed -n '2p' /tmp/range.txt)
          echo "start=$START" >> "$GITHUB_OUTPUT"
          echo "end=$END" >> "$GITHUB_OUTPUT"

      - name: Aggregate and rising
        run: |
          set -euo pipefail
          OUT="reports/auto_trends_existing/${GITHUB_RUN_ID}"
          START="${{ steps.rng.outputs.start }}"
          END="${{ steps.rng.outputs.end }}"
          python scripts/aggregate.py \
            --master data/warehouse/master.jsonl \
            --outdir "$OUT/aggregate" \
            --start "$START" --end "$END" \
            --weights   config/publisher_weights.json \
            --blacklist config/publisher_blacklist.txt \
            --extra_stop config/extra_noise.txt \
            --daily-cap 500
          python scripts/filter_tokens_csv.py \
            --in "$OUT/aggregate/tokens_by_day.csv" \
            --stop-file config/extra_noise.txt \
            --min-len 4 \
            --out "$OUT/tokens_by_day.cleaned.csv"
          python scripts/rising_from_tokens_csv.py \
            --tokens-csv "$OUT/tokens_by_day.cleaned.csv" \
            --start "$START" --end "$END" \
            --window 7 --min-total 20 --topk 500 \
            --outdir "$OUT/rising_csv"

      - name: Build site bundle
        run: |
          set -euo pipefail
          RUNID="${GITHUB_RUN_ID}"
          SRC="reports/auto_trends_existing/${RUNID}"
          DEST="site"
          mkdir -p "$DEST/run"
          rsync -av "$SRC"/ "$DEST/run/"

      - name: Upload pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: site

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - id: deployment
        uses: actions/deploy-pages@v4
