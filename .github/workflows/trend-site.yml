name: trend-site

on:
  schedule:
    - cron: "10,40 * * * *"
  workflow_dispatch: {}

permissions:
  contents: read
  pages: write
  id-token: write
  actions: read

concurrency:
  group: trend-site
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          pip install -e .

      - name: Download warehouse artifact
        id: dl
        uses: dawidd6/action-download-artifact@v3
        with:
          repo: ${{ github.repository }}
          workflow: update-warehouse.yml
          workflow_conclusion: success
          branch: main
          name: warehouse
          path: artifacts
          search_artifacts: true
          if_no_artifact_found: warn
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Restore warehouse
        id: restore
        shell: bash
        run: |
          set -euo pipefail
          mkdir -p data/warehouse/daily data/metrics
          if [ -d artifacts ]; then
            [ -f artifacts/master.jsonl ] && cp -v artifacts/master.jsonl data/warehouse/master.jsonl || true
            [ -d artifacts/daily ] && cp -v artifacts/daily/*.jsonl data/warehouse/daily/ || true
            [ -d artifacts/metrics ] && rsync -av artifacts/metrics/ data/metrics/ || true
          fi
          n=$(ls -1 data/warehouse/daily/*.jsonl 2>/dev/null | wc -l | tr -d ' ')
          echo "count=${n}" >> "$GITHUB_OUTPUT"

      - name: Stop if no warehouse
        if: steps.restore.outputs.count == '0'
        run: echo "No warehouse files restored"

      - name: Aggregate
        if: steps.restore.outputs.count != '0'
        run: |
          python scripts/aggregate_from_warehouse.py --warehouse data/warehouse/daily --out run --last-days 30 --min-len 4 --extra-stop config/extra_noise.txt

      - name: Make rising
        if: steps.restore.outputs.count != '0'
        run: |
          python - <<'PY'
          import pandas as pd, pathlib
          p=pathlib.Path("run/aggregate/articles_by_day.csv")
          df=pd.read_csv(p)
          start=str(pd.to_datetime(df['date'].min()).date())
          end=str(pd.to_datetime(df['date'].max()).date())
          pathlib.Path("run").mkdir(exist_ok=True)
          open("run/date_range.txt","w").write(start+" "+end)
          PY
          START=$(cut -d' ' -f1 run/date_range.txt)
          END=$(cut -d' ' -f2 run/date_range.txt)
          python scripts/rising_from_tokens_csv.py --tokens-csv run/tokens_by_day.cleaned.csv --start "$START" --end "$END" --window 7 --min-total 20 --topk 500 --outdir run/rising_csv

      - name: Join prices
        if: steps.restore.outputs.count != '0'
        run: |
          START=$(cut -d' ' -f1 run/date_range.txt)
          END=$(cut -d' ' -f2 run/date_range.txt)
          python scripts/join_prices.py --terms run/aggregate/tokens_by_day.csv --map config/ticker_aliases.json --start "$START" --end "$END" --out run/prices_join || true

      - name: Build site
        if: steps.restore.outputs.count != '0'
        run: |
          python scripts/build_static_ui.py --run run --out site
          test -f site/index.html
          test -f site/data/trends.json

      - name: Upload artifact
        if: steps.restore.outputs.count != '0'
        uses: actions/upload-pages-artifact@v3
        with:
          path: site

  deploy:
    if: needs.build.result == 'success'
    needs: build
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    permissions:
      pages: write
      id-token: write
    steps:
      - id: deployment
        uses: actions/deploy-pages@v4
