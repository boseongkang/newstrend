name: daily-news

on:
  schedule:
    - cron: "00 9 * * *"
  workflow_dispatch: {}

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install deps
        run: |
          set -e
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -e .

      - name: Compute ISO date (yesterday, cross-platform)
        id: when
        run: echo "date=$(date -u -d 'yesterday' +%F 2>/dev/null || date -u -v-1d +%F)" >> "$GITHUB_OUTPUT"

      - name: Ingest via NewsAPI (guarded by secret)
        if: ${{ secrets.NEWSAPI_KEY && secrets.NEWSAPI_KEY != '' }}
        env:
          NEWSAPI_KEY: ${{ secrets.NEWSAPI_KEY }}
        run: |
          set -e
          D="${{ steps.when.outputs.date }}"
          echo "INGEST_DATE=$D"
          newscli ingest --date "$D"
          # 시간대 수집/집계/분석을 쓰고 싶다면 위 대신:
          # newscli pipeline-day --date "$D" --hours-split 2 --query "news"

      - name: Skip ingest (no NEWSAPI_KEY)
        if: ${{ !secrets.NEWSAPI_KEY || secrets.NEWSAPI_KEY == '' }}
        run: echo "NEWSAPI_KEY not set; skipping NewsAPI ingest."

      - name: Generate daily report (silver 기준이 있으면 silver, 없으면 raw_newsapi)
        run: |
          set -e
          D="${{ steps.when.outputs.date }}"
          # 우선순위: silver -> raw_newsapi -> raw
          if [ -f "data/silver_newsapi/${D}.jsonl" ]; then
            K="silver_newsapi"
          elif [ -f "data/raw_newsapi/${D}.jsonl" ]; then
            K="raw_newsapi"
          else
            K="raw"
          fi
          echo "Report kind: $K for $D"
          python src/news_trend/report.py \
            --date "$D" --indir data --kind "$K" --outdir reports --top 30

      - name: Commit reports (with rebase)
        run: |
          set -e
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add reports
          git status --porcelain
          git commit -m "auto: daily report $(date -u +%F)" || echo "no changes"
          git pull --rebase origin "${GITHUB_REF_NAME:-main}" || true
          git push || true

      - name: Prepare site (Pages)
        run: |
          set -e
          rm -rf site && mkdir -p site
          cp reports/latest.html site/index.html || true
          cp -r reports/* site/ || true

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: site

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
    steps:
      - id: deploy
        uses: actions/deploy-pages@v4

