name: daily-news
on:
  schedule:
    - cron: "00 9 * * *"
  workflow_dispatch: {}
permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      NEWSAPI_KEY: ${{ secrets.NEWSAPI_KEY }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -e .

      - name: Compute ISO date (yesterday)
        id: when
        shell: bash
        run: |
          D=$(date -u -d 'yesterday' +%F 2>/dev/null || date -u -v-1d +%F)
          echo "date=$D" >> "$GITHUB_OUTPUT"

      - name: Ingest NewsAPI or skip
        shell: bash
        run: |
          if [ -n "${NEWSAPI_KEY}" ]; then
            echo "Using NEWSAPI_KEY"
            newscli ingest --newsapi --date "${{ steps.when.outputs.date }}"
          else
            echo "NEWSAPI_KEY not set; skipping ingest."
          fi

      - name: Ensure input exists
        id: in
        shell: bash
        run: |
          set -e
          D=${{ steps.when.outputs.date }}
          IN=""
          if [ -f "data/raw_newsapi/${D}.jsonl" ]; then IN="data/raw_newsapi/${D}.jsonl"; fi
          if [ -z "$IN" ] && [ -f "data/raw/newsapi_${D}.jsonl" ]; then IN="data/raw/newsapi_${D}.jsonl"; fi
          if [ -z "$IN" ] && [ -f "data/raw/${D}.jsonl" ]; then IN="data/raw/${D}.jsonl"; fi
          if [ -n "$IN" ]; then
            mkdir -p data/raw_newsapi
            if [ "$IN" != "data/raw_newsapi/${D}.jsonl" ]; then
              cp "$IN" "data/raw_newsapi/${D}.jsonl"
            fi
            echo "in=data/raw_newsapi/${D}.jsonl" >> "$GITHUB_OUTPUT"
            echo "Input: data/raw_newsapi/${D}.jsonl"
          else
            echo "in=" >> "$GITHUB_OUTPUT"
            echo "No input found for $D"
          fi

      - name: Generate daily report
        if: ${{ steps.in.outputs.in != '' }}
        run: |
          python src/news_trend/report.py \
            --date "${{ steps.when.outputs.date }}" \
            --indir data \
            --kind raw_newsapi \
            --outdir reports \
            --top 30

      - name: Commit reports
        if: ${{ steps.in.outputs.in != '' }}
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add reports
          git commit -m "auto: daily report ${{ steps.when.outputs.date }}" || true
          git push || true

      - name: Append summary
        if: ${{ steps.in.outputs.in != '' }}
        run: |
          D=${{ steps.when.outputs.date }}
          {
            echo "### Daily run"
            echo "- Date (UTC): $D"
            echo "- Input: ${{ steps.in.outputs.in }}"
            echo "- Latest: \`reports/latest.html\`"
          } >> "$GITHUB_STEP_SUMMARY"

      - name: Prepare site
        if: ${{ steps.in.outputs.in != '' }}
        run: |
          rm -rf site && mkdir -p site
          cp reports/latest.html site/index.html || true
          cp -r reports/* site/ || true

      - name: Upload Pages artifact
        if: ${{ steps.in.outputs.in != '' }}
        uses: actions/upload-pages-artifact@v3
        with:
          path: site

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
    steps:
      - id: deploy
        uses: actions/deploy-pages@v4

