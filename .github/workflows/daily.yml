name: daily-news
on:
  schedule:
    - cron: "00 9 * * *"
  workflow_dispatch: {}
permissions:
  contents: read
  pages: write
  id-token: write
jobs:
  build:
    runs-on: ubuntu-latest
    env:
      NEWSAPI_KEY: ${{ secrets.NEWSAPI_KEY }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -e .
      - name: Compute ISO (yesterday)
        id: when
        shell: bash
        run: |
          if date -u -d yesterday +%F >/dev/null 2>&1; then
            echo "date=$(date -u -d yesterday +%F)" >> "$GITHUB_OUTPUT"
          else
            echo "date=$(date -u -v-1d +%F)" >> "$GITHUB_OUTPUT"
          fi
          echo "INGEST_DATE=$(
            grep -Eo 'date=.*' "$GITHUB_OUTPUT" 2>/dev/null | head -1 | cut -d= -f2
          )" >> "$GITHUB_ENV"
      - name: Ingest hourly (NewsAPI)
        if: ${{ env.NEWSAPI_KEY != '' }}
        run: |
          newscli ingest-hourly --date "${{ steps.when.outputs.date }}" --hours-split 2 --query "news"
      - name: Aggregate day
        if: ${{ env.NEWSAPI_KEY != '' }}
        run: |
          newscli aggregate --date "${{ steps.when.outputs.date }}"
      - name: Find input for report
        id: in
        run: |
          D="${{ steps.when.outputs.date }}"
          if [ -f "data/raw_newsapi/$D.jsonl" ]; then
            echo "in=data/raw_newsapi/$D.jsonl" >> "$GITHUB_OUTPUT"
          elif [ -f "data/silver_newsapi/$D.jsonl" ]; then
            echo "in=data/silver_newsapi/$D.jsonl" >> "$GITHUB_OUTPUT"
          else
            echo "in=" >> "$GITHUB_OUTPUT"
            echo "No input found for $D"
          fi
      - name: Generate daily report
        if: ${{ steps.in.outputs.in != '' }}
        run: |
          python src/news_trend/report.py \
            --date "${{ steps.when.outputs.date }}" \
            --indir data \
            --kind raw_newsapi \
            --outdir reports \
            --top 30
      - name: Commit reports
        if: false
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add reports
          git commit -m "auto: daily report ${{ steps.when.outputs.date }}" || true
          git push || true
      - name: Append summary
        if: ${{ steps.in.outputs.in != '' }}
        run: |
          D=${{ steps.when.outputs.date }}
          {
            echo "### Daily run"
            echo "- Date (UTC): $D"
            echo "- Input: ${{ steps.in.outputs.in }}"
            echo "- Latest: `reports/latest.html`"
          } >> "$GITHUB_STEP_SUMMARY"
      - name: Prepare site
        if: ${{ steps.in.outputs.in != '' }}
        run: |
          rm -rf site && mkdir -p site
          cp reports/latest.html site/index.html || true
          cp -r reports/* site/ || true
      - name: Upload Pages artifact
        if: ${{ steps.in.outputs.in != '' }}
        uses: actions/upload-pages-artifact@v3
        with:
          path: site
      - name: Commit data and reports
        if: false
        run: |
          set -e
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add -A data reports || true
          if git diff --cached --quiet; then
            echo "Nothing to commit."
          else
            git commit -m "daily: ${INGEST_DATE:-$(date -u +%F)} data+report"
            git push
            echo "Committed data/reports."
          fi
  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
    steps:
      - id: deploy
        uses: actions/deploy-pages@v4
